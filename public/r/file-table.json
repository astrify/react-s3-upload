{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "file-table",
	"type": "registry:component",
	"title": "File Table",
	"description": "A comprehensive file table component displaying uploaded files with status, progress, and actions.",
	"dependencies": ["lucide-react", "clsx", "tailwind-merge"],
	"registryDependencies": ["badge", "button", "table", "tooltip"],
	"files": [
		{
			"path": "src/components/FileTable.tsx",
			"content": "import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableHead,\n\tTableHeader,\n\tTableRow,\n} from \"@/components/ui/table\";\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\nimport { formatBytes, useFileUpload } from \"@astrify/react-s3-upload\";\nimport type {\n\tFileType,\n\tFileUpload,\n\tUploadStatus,\n} from \"@astrify/react-s3-upload\";\nimport {\n\tFileArchiveIcon,\n\tFileSpreadsheetIcon,\n\tFileTextIcon,\n\tHeadphonesIcon,\n\tImageIcon,\n\tRefreshCwIcon,\n\tTrash2,\n\tVideoIcon,\n} from \"lucide-react\";\n\nexport function getFileIcon(file: FileType) {\n\tconst type = file instanceof File ? file.type : file.type;\n\tif (type.startsWith(\"image/\")) {\n\t\treturn <ImageIcon className=\"size-4\" />;\n\t}\n\tif (type.startsWith(\"video/\")) {\n\t\treturn <VideoIcon className=\"size-4\" />;\n\t}\n\tif (type.startsWith(\"audio/\")) {\n\t\treturn <HeadphonesIcon className=\"size-4\" />;\n\t}\n\tif (type.includes(\"pdf\")) {\n\t\treturn <FileTextIcon className=\"size-4\" />;\n\t}\n\tif (type.includes(\"word\") || type.includes(\"doc\")) {\n\t\treturn <FileTextIcon className=\"size-4\" />;\n\t}\n\tif (type.includes(\"excel\") || type.includes(\"sheet\")) {\n\t\treturn <FileSpreadsheetIcon className=\"size-4\" />;\n\t}\n\tif (type.includes(\"zip\") || type.includes(\"rar\")) {\n\t\treturn <FileArchiveIcon className=\"size-4\" />;\n\t}\n\treturn <FileTextIcon className=\"size-4\" />;\n}\n\nexport function getFileTypeLabel(file: FileType) {\n\tconst type = file instanceof File ? file.type : file.type;\n\tif (type.startsWith(\"image/\")) {\n\t\treturn \"Image\";\n\t}\n\tif (type.startsWith(\"video/\")) {\n\t\treturn \"Video\";\n\t}\n\tif (type.startsWith(\"audio/\")) {\n\t\treturn \"Audio\";\n\t}\n\tif (type.includes(\"pdf\")) {\n\t\treturn \"PDF\";\n\t}\n\tif (type.includes(\"word\") || type.includes(\"doc\")) {\n\t\treturn \"Word\";\n\t}\n\tif (type.includes(\"excel\") || type.includes(\"sheet\")) {\n\t\treturn \"Excel\";\n\t}\n\tif (type.includes(\"zip\") || type.includes(\"rar\")) {\n\t\treturn \"Archive\";\n\t}\n\tif (type.includes(\"json\")) {\n\t\treturn \"JSON\";\n\t}\n\tif (type.includes(\"text\")) {\n\t\treturn \"Text\";\n\t}\n\treturn \"File\";\n}\n\ninterface FileTableProps {\n\tshowActions?: boolean;\n\tclassName?: string;\n}\n\nexport function FileTable({ showActions = true, className }: FileTableProps) {\n\tconst { files, removeFile, retryUpload } = useFileUpload();\n\n\tif (files.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<TooltipProvider>\n\t\t\t<div className={cn(\"rounded-lg border\", className)}>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHeader>\n\t\t\t\t\t\t<TableRow className=\"text-xs\">\n\t\t\t\t\t\t\t<TableHead className=\"h-9\">Name</TableHead>\n\t\t\t\t\t\t\t<TableHead className=\"h-9\">Type</TableHead>\n\t\t\t\t\t\t\t<TableHead className=\"h-9\">Size</TableHead>\n\t\t\t\t\t\t\t{showActions && <TableHead className=\"h-9\">Actions</TableHead>}\n\t\t\t\t\t\t\t<TableHead className=\"h-9 w-[110px]\">Status</TableHead>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHeader>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{files.map((fileItem) => (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tkey={fileItem.sha256}\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\tfileItem.duplicateAlert && \"animate-pulse bg-primary/10\",\n\t\t\t\t\t\t\t\t\tfileItem.status === \"pending\" && \"opacity-60\",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableCell className=\"py-2 ps-1.5\">\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n\t\t\t\t\t\t\t\t\t\t<FileIconWithProgress file={fileItem} />\n\t\t\t\t\t\t\t\t\t\t<p className=\"flex items-center gap-1 truncate font-medium text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t{fileItem.name}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell className=\"py-2\">\n\t\t\t\t\t\t\t\t\t<Badge variant=\"secondary\" className=\"text-xs\">\n\t\t\t\t\t\t\t\t\t\t{getFileTypeLabel(fileItem)}\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell className=\"py-2 text-muted-foreground text-sm\">\n\t\t\t\t\t\t\t\t\t{formatBytes(fileItem.size)}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t{showActions && (\n\t\t\t\t\t\t\t\t\t<TableCell className=\"py-2 pe-1\">\n\t\t\t\t\t\t\t\t\t\t<FileActions\n\t\t\t\t\t\t\t\t\t\t\tfileItem={fileItem}\n\t\t\t\t\t\t\t\t\t\t\tonRetry={() => retryUpload(fileItem.sha256)}\n\t\t\t\t\t\t\t\t\t\t\tonRemove={() => removeFile(fileItem.sha256)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<TableCell className=\"py-2\">\n\t\t\t\t\t\t\t\t\t<FileStatusBadge\n\t\t\t\t\t\t\t\t\t\tstatus={fileItem.status}\n\t\t\t\t\t\t\t\t\t\tprogress={fileItem.progress}\n\t\t\t\t\t\t\t\t\t\terror={fileItem.error}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t</TooltipProvider>\n\t);\n}\n\nfunction FileStatusBadge({\n\tstatus,\n\tprogress,\n\terror,\n}: { status: UploadStatus; progress?: number; error?: string }) {\n\tswitch (status) {\n\t\tcase \"pending\":\n\t\t\treturn (\n\t\t\t\t<Badge variant=\"outline\" className=\"text-xs\">\n\t\t\t\t\tQueued\n\t\t\t\t</Badge>\n\t\t\t);\n\t\tcase \"uploading\":\n\t\t\treturn (\n\t\t\t\t<Badge variant=\"secondary\" className=\"text-xs\">\n\t\t\t\t\tUploading {progress ? `${Math.round(progress)}%` : \"\"}\n\t\t\t\t</Badge>\n\t\t\t);\n\t\tcase \"complete\":\n\t\t\treturn (\n\t\t\t\t<Badge\n\t\t\t\t\tvariant=\"default\"\n\t\t\t\t\tclassName=\"border-green-500/20 bg-green-500/10 text-green-600 text-xs\"\n\t\t\t\t>\n\t\t\t\t\tReady\n\t\t\t\t</Badge>\n\t\t\t);\n\t\tcase \"error\":\n\t\t\treturn (\n\t\t\t\t<Tooltip>\n\t\t\t\t\t<TooltipTrigger asChild={true}>\n\t\t\t\t\t\t<Badge variant=\"destructive\" className=\"cursor-help text-xs\">\n\t\t\t\t\t\t\tError\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t<TooltipContent>\n\t\t\t\t\t\t<p>{error || \"Upload failed\"}</p>\n\t\t\t\t\t</TooltipContent>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nfunction FileIconWithProgress({ file }: { file: FileUpload }) {\n\tconst iconContent = (\n\t\t<div\n\t\t\tclassName={cn(\n\t\t\t\t\"relative flex size-8 shrink-0 items-center justify-center text-muted-foreground/80\",\n\t\t\t)}\n\t\t>\n\t\t\t{file.status === \"pending\" ? (\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\tclassName=\"size-8\"\n\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\taria-label=\"Pending upload\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<title>Pending upload</title>\n\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\tcx=\"16\"\n\t\t\t\t\t\t\tcy=\"16\"\n\t\t\t\t\t\t\tr=\"14\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\t\tstrokeDasharray=\"4 3\"\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground/40\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div className=\"absolute inset-0 flex items-center justify-center\">\n\t\t\t\t\t\t{getFileIcon(file)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : file.status === \"uploading\" && file.progress > 0 ? (\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\tclassName=\"-rotate-90 size-8\"\n\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t\taria-label=\"Upload progress\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<title>Upload progress</title>\n\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\tcx=\"16\"\n\t\t\t\t\t\t\tcy=\"16\"\n\t\t\t\t\t\t\tr=\"14\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground/20\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\tcx=\"16\"\n\t\t\t\t\t\t\tcy=\"16\"\n\t\t\t\t\t\t\tr=\"14\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\t\tstrokeDasharray={`${2 * Math.PI * 14}`}\n\t\t\t\t\t\t\tstrokeDashoffset={`${2 * Math.PI * 14 * (1 - file.progress / 100)}`}\n\t\t\t\t\t\t\tclassName=\"text-primary transition-all duration-300\"\n\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<div className=\"absolute inset-0 flex items-center justify-center\">\n\t\t\t\t\t\t{getFileIcon(file)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : file.status === \"complete\" ? (\n\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t{getFileIcon(file)}\n\t\t\t\t</div>\n\t\t\t) : file.status === \"error\" ? (\n\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t{getFileIcon(file)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"flex not-[]:size-8 items-center justify-center\">\n\t\t\t\t\t{getFileIcon(file)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\treturn iconContent;\n}\n\nfunction FileActions({\n\tfileItem,\n\tonRetry,\n\tonRemove,\n}: {\n\tfileItem: FileUpload;\n\tonRetry: () => void;\n\tonRemove: () => void;\n}) {\n\treturn (\n\t\t<div className=\"flex items-center gap-1\">\n\t\t\t{fileItem.status === \"error\" && (\n\t\t\t\t<Tooltip>\n\t\t\t\t\t<TooltipTrigger asChild={true}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={onRetry}\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\t\tclassName=\"size-8 text-destructive/80 hover:text-destructive\"\n\t\t\t\t\t\t\t\taria-label=\"Retry upload\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<RefreshCwIcon className=\"size-3.5\" />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t<TooltipContent>\n\t\t\t\t\t\t<p>Retry upload</p>\n\t\t\t\t\t</TooltipContent>\n\t\t\t\t</Tooltip>\n\t\t\t)}\n\t\t\t<Button onClick={onRemove} variant=\"ghost\" size=\"icon\" className=\"size-8\">\n\t\t\t\t<Trash2 className=\"size-3.5\" />\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n",
			"type": "registry:component"
		}
	],
	"tailwind": {
		"config": {}
	},
	"cssVars": {},
	"docs": "This component requires @astrify/react-s3-upload to be installed for the FileUploadProvider context.",
	"categories": ["upload", "display"]
}
