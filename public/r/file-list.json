{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "file-list",
	"type": "registry:component",
	"title": "File List",
	"description": "A list-based file display component showing upload status, progress, and error handling.",
	"dependencies": ["lucide-react", "clsx", "tailwind-merge"],
	"registryDependencies": ["button"],
	"files": [
		{
			"path": "src/components/FileList.tsx",
			"content": "import { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { formatBytes, useFileUpload } from \"@astrify/react-s3-upload\";\nimport type { FileType, FileUpload } from \"@astrify/react-s3-upload\";\nimport {\n\tFileArchiveIcon,\n\tFileIcon,\n\tFileSpreadsheetIcon,\n\tFileTextIcon,\n\tHeadphonesIcon,\n\tImageIcon,\n\tRefreshCwIcon,\n\tVideoIcon,\n\tXIcon,\n} from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\n\nfunction FilePreviewWithProgress({\n\tfile,\n\tshowPreview,\n}: { file: FileUpload; showPreview: boolean }) {\n\tconst [previewUrl, setPreviewUrl] = useState<string | null>(null);\n\n\tuseEffect(() => {\n\t\t// Create preview URL if it's an image and we have the file or a preview URL\n\t\tif (showPreview && file.type.startsWith(\"image/\")) {\n\t\t\tif (file.preview) {\n\t\t\t\tsetPreviewUrl(file.preview);\n\t\t\t} else if (file.file instanceof File) {\n\t\t\t\tconst url = URL.createObjectURL(file.file);\n\t\t\t\tsetPreviewUrl(url);\n\t\t\t\treturn () => URL.revokeObjectURL(url);\n\t\t\t}\n\t\t}\n\t}, [file, showPreview]);\n\n\t// For images with preview enabled, use progressive reveal effect\n\tif (showPreview && previewUrl && file.type.startsWith(\"image/\")) {\n\t\tif (file.status === \"pending\" || file.status === \"uploading\") {\n\t\t\tconst progress = file.status === \"pending\" ? 0 : file.progress || 0;\n\t\t\treturn (\n\t\t\t\t<div className=\"relative size-10 overflow-hidden rounded\">\n\t\t\t\t\t{/* Dimmed base image */}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\talt={file.name}\n\t\t\t\t\t\tclassName=\"absolute inset-0 size-10 object-cover opacity-30\"\n\t\t\t\t\t/>\n\t\t\t\t\t{/* Progressive reveal overlay */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"absolute inset-0 overflow-hidden\"\n\t\t\t\t\t\tstyle={{ width: `${progress}%` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={previewUrl}\n\t\t\t\t\t\t\talt={file.name}\n\t\t\t\t\t\t\tclassName=\"size-10 object-cover\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Optional: Add a subtle progress line */}\n\t\t\t\t\t{file.status === \"uploading\" && progress > 0 && progress < 100 && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"absolute inset-y-0 w-0.5 bg-primary/50\"\n\t\t\t\t\t\t\tstyle={{ left: `${progress}%` }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t// Completed or error state - show full image\n\t\treturn (\n\t\t\t<img\n\t\t\t\tsrc={previewUrl}\n\t\t\t\talt={file.name}\n\t\t\t\tclassName=\"size-10 rounded object-cover\"\n\t\t\t/>\n\t\t);\n\t}\n\n\t// For non-image files, use the circular progress indicator\n\tconst iconContent = (\n\t\t<div className=\"flex size-10 items-center justify-center\">\n\t\t\t{getFileIcon(file)}\n\t\t</div>\n\t);\n\n\tif (file.status === \"pending\") {\n\t\treturn (\n\t\t\t<div className=\"relative size-10\">\n\t\t\t\t{iconContent}\n\t\t\t\t<svg\n\t\t\t\t\tclassName=\"absolute inset-0 size-10\"\n\t\t\t\t\tviewBox=\"0 0 40 40\"\n\t\t\t\t\taria-label=\"Pending upload\"\n\t\t\t\t>\n\t\t\t\t\t<title>Pending upload</title>\n\t\t\t\t\t<circle\n\t\t\t\t\t\tcx=\"20\"\n\t\t\t\t\t\tcy=\"20\"\n\t\t\t\t\t\tr=\"18\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\tstrokeDasharray=\"4 3\"\n\t\t\t\t\t\tclassName=\"text-muted-foreground/40\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (file.status === \"uploading\" && file.progress > 0) {\n\t\treturn (\n\t\t\t<div className=\"relative size-10\">\n\t\t\t\t{iconContent}\n\t\t\t\t<svg\n\t\t\t\t\tclassName=\"-rotate-90 absolute inset-0 size-10\"\n\t\t\t\t\tviewBox=\"0 0 40 40\"\n\t\t\t\t\taria-label=\"Upload progress\"\n\t\t\t\t>\n\t\t\t\t\t<title>Upload progress</title>\n\t\t\t\t\t<circle\n\t\t\t\t\t\tcx=\"20\"\n\t\t\t\t\t\tcy=\"20\"\n\t\t\t\t\t\tr=\"18\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\tclassName=\"text-muted-foreground/20\"\n\t\t\t\t\t/>\n\t\t\t\t\t<circle\n\t\t\t\t\t\tcx=\"20\"\n\t\t\t\t\t\tcy=\"20\"\n\t\t\t\t\t\tr=\"18\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\tstrokeDasharray={`${2 * Math.PI * 18}`}\n\t\t\t\t\t\tstrokeDashoffset={`${2 * Math.PI * 18 * (1 - file.progress / 100)}`}\n\t\t\t\t\t\tclassName=\"text-primary transition-all duration-300\"\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn iconContent;\n}\n\nexport function getFileIcon(file: FileType) {\n\tconst type = file instanceof File ? file.type : file.type;\n\tconst name = file instanceof File ? file.name : file.name;\n\n\tif (\n\t\ttype.includes(\"pdf\") ||\n\t\tname.endsWith(\".pdf\") ||\n\t\ttype.includes(\"word\") ||\n\t\tname.endsWith(\".doc\") ||\n\t\tname.endsWith(\".docx\")\n\t) {\n\t\treturn <FileTextIcon className=\"size-4 opacity-60\" />;\n\t}\n\tif (\n\t\ttype.includes(\"zip\") ||\n\t\ttype.includes(\"archive\") ||\n\t\tname.endsWith(\".zip\") ||\n\t\tname.endsWith(\".rar\")\n\t) {\n\t\treturn <FileArchiveIcon className=\"size-4 opacity-60\" />;\n\t}\n\tif (\n\t\ttype.includes(\"excel\") ||\n\t\tname.endsWith(\".xls\") ||\n\t\tname.endsWith(\".xlsx\")\n\t) {\n\t\treturn <FileSpreadsheetIcon className=\"size-4 opacity-60\" />;\n\t}\n\tif (type.includes(\"video/\")) {\n\t\treturn <VideoIcon className=\"size-4 opacity-60\" />;\n\t}\n\tif (type.includes(\"audio/\")) {\n\t\treturn <HeadphonesIcon className=\"size-4 opacity-60\" />;\n\t}\n\tif (type.startsWith(\"image/\")) {\n\t\treturn <ImageIcon className=\"size-4 opacity-60\" />;\n\t}\n\treturn <FileIcon className=\"size-4 opacity-60\" />;\n}\n\nfunction getStatusDisplay(file: FileUpload) {\n\tswitch (file.status) {\n\t\tcase \"pending\":\n\t\t\treturn <p className=\"text-muted-foreground text-xs\">Queued</p>;\n\t\tcase \"uploading\":\n\t\t\treturn (\n\t\t\t\t<p className=\"text-muted-foreground text-xs\">\n\t\t\t\t\tUploading {file.progress ? `${Math.round(file.progress)}%` : \"\"}\n\t\t\t\t</p>\n\t\t\t);\n\t\tcase \"complete\":\n\t\t\treturn (\n\t\t\t\t<p className=\"text-muted-foreground text-xs\">\n\t\t\t\t\t{formatBytes(file.size)}\n\t\t\t\t</p>\n\t\t\t);\n\t\tcase \"error\":\n\t\t\treturn (\n\t\t\t\t<p className=\"text-destructive text-xs\">\n\t\t\t\t\t{file.error || \"Upload failed\"}\n\t\t\t\t</p>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\ninterface FileListProps {\n\tshowActions?: boolean;\n\tshowImagePreviews?: boolean;\n\tclassName?: string;\n}\n\nexport function FileList({\n\tshowActions = true,\n\tshowImagePreviews = false,\n\tclassName,\n}: FileListProps) {\n\tconst { files, removeFile, retryUpload } = useFileUpload();\n\n\tif (files.length === 0) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className={cn(\"space-y-2\", className)}>\n\t\t\t{files.map((file) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={file.sha256}\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\"flex items-center justify-between gap-2 rounded-lg border bg-background p-2 pe-3\",\n\t\t\t\t\t\tfile.status === \"pending\" && \"opacity-60\",\n\t\t\t\t\t\tfile.duplicateAlert && \"bg-primary/10\",\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex items-center gap-3 overflow-hidden\">\n\t\t\t\t\t\t<div className=\"shrink-0\">\n\t\t\t\t\t\t\t<FilePreviewWithProgress\n\t\t\t\t\t\t\t\tfile={file}\n\t\t\t\t\t\t\t\tshowPreview={showImagePreviews}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex min-w-0 flex-col gap-0.5\">\n\t\t\t\t\t\t\t<p className=\"truncate font-medium text-[13px]\">{file.name}</p>\n\t\t\t\t\t\t\t{getStatusDisplay(file)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{showActions && (\n\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t{file.status === \"error\" && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tclassName=\"size-8 text-muted-foreground/80 hover:bg-transparent hover:text-foreground\"\n\t\t\t\t\t\t\t\t\tonClick={() => retryUpload(file.sha256)}\n\t\t\t\t\t\t\t\t\taria-label=\"Retry upload\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<RefreshCwIcon className=\"size-4\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"icon\"\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tclassName=\"-me-2 size-8 text-muted-foreground/80 hover:bg-transparent hover:text-foreground\"\n\t\t\t\t\t\t\t\tonClick={() => removeFile(file.sha256)}\n\t\t\t\t\t\t\t\taria-label=\"Remove file\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<XIcon className=\"size-4\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n",
			"type": "registry:component"
		}
	],
	"tailwind": {
		"config": {}
	},
	"cssVars": {},
	"docs": "This component requires @astrify/react-s3-upload to be installed for the FileUploadProvider context.",
	"categories": ["upload", "display"]
}
